 package com.action; 

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.jy.framework.util.bean.BeanUtil;
import com.jy.mobile.dto.LoginUserInfo;
import com.entity.<ClassName></ClassName>;
import com.service.<ClassName></ClassName>Service;
import com.jy.mobile.util.StringUtils;
import com.jy.mobile.web.action.BaseAction;
import com.form.<ClassName></ClassName>Form;

 public class <ClassName></ClassName>SaveAction extends BaseAction{
		private <ClassName></ClassName>Service get<ClassName></ClassName>Service(){
			return (<ClassName></ClassName>Service) super.getBeanService("<className></className>Service");
		}
		
		public ActionForward execute(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response)
				throws Exception {
			try {
				<ClassName></ClassName>Form theForm = (<ClassName></ClassName>Form) form;
				String id = theForm.getId();
				<ClassName></ClassName> entity = new <ClassName></ClassName>();
				BeanUtil.copy(entity,theForm);
				LoginUserInfo loginUserInfo = (LoginUserInfo) this.getCurrentUserInfo(request);
				if(StringUtils.isEmpty(id)){
					entity.setCreatedBy(loginUserInfo.getYhid());
					get<ClassName></ClassName>Service().insert<ClassName></ClassName>(entity);
				}else{
					entity.setUpdatedBy(loginUserInfo.getYhid());
					<ClassName></ClassName> entityOld = get<ClassName></ClassName>Service().get<ClassName></ClassName>(id);
					entity.setCreatedBy(entityOld.getCreatedBy());
					entity.setCreatedDate(entityOld.getCreatedDate());
					entity.setDelflag(entityOld.getDelflag());
					get<ClassName></ClassName>Service().update<ClassName></ClassName>(entity);
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			return mapping.findForward("success");
		}
}

